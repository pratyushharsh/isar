name: Dart CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  format:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ secrets.FLUTTER_VERSION }}
      - name: Check formatting
        run: flutter format --dry-run . --set-exit-if-changed

  lint:
    name: Check lints
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ secrets.FLUTTER_VERSION }}
      - run: flutter pub get
        working-directory: packages/isar
      - run: flutter pub get
        working-directory: packages/isar_flutter_libs
      - run: flutter pub get
        working-directory: packages/isar_generator
      - run: flutter pub get
        working-directory: packages/isar_inspector
      - run: |
          flutter pub get
          flutter pub run build_runner build
          dart tool/generate_all_tests.dart
        working-directory: packages/isar_test
      - name: Lint
        run: flutter analyze

  test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - name: Run Flutter Unit tests
        run: |
          flutter pub get
          dart tool/generate_long_double_test.dart
          flutter pub run build_runner build
          flutter test -j 1
        working-directory: packages/isar_test

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - name: Prepare Unit tests
        run: |
          flutter pub get
          dart tool/generate_long_double_test.dart
          flutter pub run build_runner build
        working-directory: packages/isar_test
      - name: Collect isar Coverage
        run: |
          flutter test --coverage
        working-directory: packages/isar
      - uses: codecov/codecov-action@v3
        with:
          files: packages/isar/coverage/lcov.info
      - name: Collect isar_test Coverage
        run: |
          flutter test --coverage ../isar_test/test
        working-directory: packages/isar
      - uses: codecov/codecov-action@v3
        with:
          files: packages/isar/coverage/lcov.info

  test_generator:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - name: Run Generator Unit tests
        run: |
          dart pub get
          dart test
        working-directory: packages/isar_generator

  drive_ios:
    strategy:
      matrix:
        device:
          - "iPhone 8"
          - "iPhone 11 Pro Max"
      fail-fast: false
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Start simulator
        uses: futureware-tech/simulator-action@v1
        with:
          model: ${{ matrix.device }}
      - uses: subosito/flutter-action@v2
      - name: Download binaries
        run: bash tool/download_binaries.sh
        working-directory: packages/isar_flutter_libs
      - name: Run Flutter Driver tests
        run: |
          flutter pub get
          dart tool/generate_long_double_test.dart
          flutter pub run build_runner build
          dart tool/generate_all_tests.dart
          flutter drive --driver=isar_driver.dart --target=isar_driver_target.dart
        working-directory: packages/isar_test

  drive_android:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [29] #[21, 29]
        target: [default]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'zulu'
      - uses: subosito/flutter-action@v2
      - name: Download binaries
        run: bash tool/download_binaries.sh
        working-directory: packages/isar_flutter_libs
      - name: Run isar_generator
        run: |
          flutter pub get
          dart tool/generate_long_double_test.dart
          flutter pub run build_runner build
          dart tool/generate_all_tests.dart
        working-directory: packages/isar_test
      - name: Run Flutter Driver tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          profile: Nexus 6
          working-directory: packages/isar_test
          script: "flutter drive --driver=isar_driver.dart --target=isar_driver_target.dart"

  drive_desktop:
    strategy:
      matrix:
        os: [macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - name: Install Linux requirements
        run: sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev
        if: matrix.os == 'ubuntu-latest'
      - name: Download binaries
        run: bash tool/download_binaries.sh
        working-directory: packages/isar_flutter_libs
      - name: Run Flutter Driver tests
        run: |
          flutter pub get
          dart tool/generate_long_double_test.dart
          flutter pub run build_runner build
          dart tool/generate_all_tests.dart
          flutter config --no-enable-web
          flutter config --enable-macos-desktop 
          flutter config --enable-linux-desktop 
          flutter config --enable-windows-desktop 
          flutter drive --driver=isar_driver.dart --target=isar_driver_target.dart
        working-directory: packages/isar_test

  drive_chrome:
    runs-on: ubuntu-latest
    if: ${{ false }}
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - name: Install chromedricer
        uses: nanasess/setup-chromedriver@v1
      - name: Prepare chromedricer
        run: chromedriver --port=4444 &
      - name: Run Dart tests in browser
        run: |
          flutter pub get
          dart tool/generate_long_double_test.dart
          flutter pub run build_runner build
          dart tool/generate_all_tests.dart
          flutter drive --driver=isar_driver.dart --target=isar_driver_target.dart -d web-server --browser-name chrome
        working-directory: packages/isar_test

  drive_safari:
    runs-on: macos-latest
    if: ${{ false }}
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - name: Prepare safaridricer
        run: |
          sudo safaridriver --enable
          safaridriver --port=4444 &
      - name: Run Dart tests in browser
        run: |
          flutter pub get
          dart tool/generate_long_double_test.dart
          flutter pub run build_runner build
          dart tool/generate_all_tests.dart
          flutter drive --driver=isar_driver.dart --target=isar_driver_target.dart -d web-server --browser-name safari
        working-directory: packages/isar_test

  drive_firefox:
    runs-on: ubuntu-latest
    if: ${{ false }}
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - name: Install geckodriver
        uses: browser-actions/setup-geckodriver@latest
      - name: Prepare geckodriver
        run: geckodriver --port=4444 &
      - name: Run Dart tests in browser
        run: |
          flutter pub get
          dart tool/generate_long_double_test.dart
          flutter pub run build_runner build
          dart tool/generate_all_tests.dart
          flutter drive --driver=isar_driver.dart --target=isar_driver_target.dart -d web-server --browser-name firefox
        working-directory: packages/isar_test
